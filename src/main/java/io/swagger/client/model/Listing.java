/**
 * Marketcheck Cars API
 * <b>Access the New, Used and Certified cars inventories for all Car Dealers in US.</b> <br/>The data is sourced from online listings by over 44,000 Car dealers in US. At any time, there are about 6.2M searchable listings (about 1.9M unique VINs) for Used & Certified cars and about 6.6M (about 3.9M unique VINs) New Car listings from all over US. We use this API at the back for our website <a href='https://www.marketcheck.com' target='_blank'>www.marketcheck.com</a> and our Android and iOS mobile apps too.<br/><h5> Few useful links : </h5><ul><li>A quick view of the API and the use cases is depicated <a href='https://portals.marketcheck.com/mcapi/' target='_blank'>here</a></li><li>The Postman collection with various usages of the API is shared here https://www.getpostman.com/collections/2752684ff636cdd7bac2</li></ul>
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Build;
import io.swagger.client.model.Dealer;
import io.swagger.client.model.ListingExtraAttributes;
import io.swagger.client.model.ListingMedia;
import io.swagger.client.model.Location;
import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents a full list of attributes available with Marketcheck for a car
 **/
@ApiModel(description = "Represents a full list of attributes available with Marketcheck for a car")
public class Listing {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("heading")
  private String heading = null;
  @SerializedName("vin")
  private String vin = null;
  @SerializedName("stock_no")
  private String stockNo = null;
  @SerializedName("price")
  private String price = null;
  @SerializedName("msrp")
  private String msrp = null;
  @SerializedName("miles")
  private String miles = null;
  @SerializedName("inventory_type")
  private String inventoryType = null;
  @SerializedName("scraped_at_date")
  private BigDecimal scrapedAtDate = null;
  @SerializedName("first_seen_at")
  private BigDecimal firstSeenAt = null;
  @SerializedName("first_seen_at_date")
  private String firstSeenAtDate = null;
  @SerializedName("vdp_url")
  private String vdpUrl = null;
  @SerializedName("source")
  private String source = null;
  @SerializedName("is_certified")
  private Integer isCertified = null;
  @SerializedName("dom")
  private BigDecimal dom = null;
  @SerializedName("dom_180")
  private BigDecimal dom180 = null;
  @SerializedName("dom_active")
  private BigDecimal domActive = null;
  @SerializedName("seller_type")
  private String sellerType = null;
  @SerializedName("last_seen_at")
  private BigDecimal lastSeenAt = null;
  @SerializedName("last_seen_at_date")
  private String lastSeenAtDate = null;
  @SerializedName("build")
  private Build build = null;
  @SerializedName("media")
  private ListingMedia media = null;
  @SerializedName("extra")
  private ListingExtraAttributes extra = null;
  @SerializedName("dealer")
  private Dealer dealer = null;
  @SerializedName("car_location")
  private Location carLocation = null;

  /**
   * Unique identifier representing a specific listing from the Marketcheck database
   **/
  @ApiModelProperty(value = "Unique identifier representing a specific listing from the Marketcheck database")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Listing heading
   **/
  @ApiModelProperty(value = "Listing heading")
  public String getHeading() {
    return heading;
  }
  public void setHeading(String heading) {
    this.heading = heading;
  }

  /**
   * VIN for the car
   **/
  @ApiModelProperty(value = "VIN for the car")
  public String getVin() {
    return vin;
  }
  public void setVin(String vin) {
    this.vin = vin;
  }

  /**
   * Stock no of the car
   **/
  @ApiModelProperty(value = "Stock no of the car")
  public String getStockNo() {
    return stockNo;
  }
  public void setStockNo(String stockNo) {
    this.stockNo = stockNo;
  }

  /**
   * Asking price for the car
   **/
  @ApiModelProperty(value = "Asking price for the car")
  public String getPrice() {
    return price;
  }
  public void setPrice(String price) {
    this.price = price;
  }

  /**
   * MSRP for the car
   **/
  @ApiModelProperty(value = "MSRP for the car")
  public String getMsrp() {
    return msrp;
  }
  public void setMsrp(String msrp) {
    this.msrp = msrp;
  }

  /**
   * Odometer reading / reported miles usage for the car
   **/
  @ApiModelProperty(value = "Odometer reading / reported miles usage for the car")
  public String getMiles() {
    return miles;
  }
  public void setMiles(String miles) {
    this.miles = miles;
  }

  /**
   * Inventory type of car
   **/
  @ApiModelProperty(value = "Inventory type of car")
  public String getInventoryType() {
    return inventoryType;
  }
  public void setInventoryType(String inventoryType) {
    this.inventoryType = inventoryType;
  }

  /**
   * Listing first seen at first scraped date
   **/
  @ApiModelProperty(value = "Listing first seen at first scraped date")
  public BigDecimal getScrapedAtDate() {
    return scrapedAtDate;
  }
  public void setScrapedAtDate(BigDecimal scrapedAtDate) {
    this.scrapedAtDate = scrapedAtDate;
  }

  /**
   * Listing first seen at first scraped timestamp
   **/
  @ApiModelProperty(value = "Listing first seen at first scraped timestamp")
  public BigDecimal getFirstSeenAt() {
    return firstSeenAt;
  }
  public void setFirstSeenAt(BigDecimal firstSeenAt) {
    this.firstSeenAt = firstSeenAt;
  }

  /**
   * Listing first seen at first scraped date
   **/
  @ApiModelProperty(value = "Listing first seen at first scraped date")
  public String getFirstSeenAtDate() {
    return firstSeenAtDate;
  }
  public void setFirstSeenAtDate(String firstSeenAtDate) {
    this.firstSeenAtDate = firstSeenAtDate;
  }

  /**
   * Vehicle Details Page url of the specific car
   **/
  @ApiModelProperty(value = "Vehicle Details Page url of the specific car")
  public String getVdpUrl() {
    return vdpUrl;
  }
  public void setVdpUrl(String vdpUrl) {
    this.vdpUrl = vdpUrl;
  }

  /**
   * Source domain of the listing
   **/
  @ApiModelProperty(value = "Source domain of the listing")
  public String getSource() {
    return source;
  }
  public void setSource(String source) {
    this.source = source;
  }

  /**
   * Flag indicating whether the car is Certified
   **/
  @ApiModelProperty(value = "Flag indicating whether the car is Certified")
  public Integer getIsCertified() {
    return isCertified;
  }
  public void setIsCertified(Integer isCertified) {
    this.isCertified = isCertified;
  }

  /**
   * Days on Market value for the car based on current and historical listings found in the Marketcheck database for this car
   **/
  @ApiModelProperty(value = "Days on Market value for the car based on current and historical listings found in the Marketcheck database for this car")
  public BigDecimal getDom() {
    return dom;
  }
  public void setDom(BigDecimal dom) {
    this.dom = dom;
  }

  /**
   * Days on Market value for the car based on current and last 6 month listings found in the Marketcheck database for this car
   **/
  @ApiModelProperty(value = "Days on Market value for the car based on current and last 6 month listings found in the Marketcheck database for this car")
  public BigDecimal getDom180() {
    return dom180;
  }
  public void setDom180(BigDecimal dom180) {
    this.dom180 = dom180;
  }

  /**
   * Days on Market value for the car based on current and last 30 days listings found in the Marketcheck database for this car
   **/
  @ApiModelProperty(value = "Days on Market value for the car based on current and last 30 days listings found in the Marketcheck database for this car")
  public BigDecimal getDomActive() {
    return domActive;
  }
  public void setDomActive(BigDecimal domActive) {
    this.domActive = domActive;
  }

  /**
   * Seller type for the car
   **/
  @ApiModelProperty(value = "Seller type for the car")
  public String getSellerType() {
    return sellerType;
  }
  public void setSellerType(String sellerType) {
    this.sellerType = sellerType;
  }

  /**
   * Listing last seen at (most recent) timestamp
   **/
  @ApiModelProperty(value = "Listing last seen at (most recent) timestamp")
  public BigDecimal getLastSeenAt() {
    return lastSeenAt;
  }
  public void setLastSeenAt(BigDecimal lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
  }

  /**
   * Listing last seen at (most recent) date
   **/
  @ApiModelProperty(value = "Listing last seen at (most recent) date")
  public String getLastSeenAtDate() {
    return lastSeenAtDate;
  }
  public void setLastSeenAtDate(String lastSeenAtDate) {
    this.lastSeenAtDate = lastSeenAtDate;
  }

  /**
   * Build / Specifications attributes
   **/
  @ApiModelProperty(value = "Build / Specifications attributes")
  public Build getBuild() {
    return build;
  }
  public void setBuild(Build build) {
    this.build = build;
  }

  /**
   * Car Media Attributes - main photo link/url and photo links
   **/
  @ApiModelProperty(value = "Car Media Attributes - main photo link/url and photo links")
  public ListingMedia getMedia() {
    return media;
  }
  public void setMedia(ListingMedia media) {
    this.media = media;
  }

  /**
   * Extra attributes for the listing - options, features, seller comments etc
   **/
  @ApiModelProperty(value = "Extra attributes for the listing - options, features, seller comments etc")
  public ListingExtraAttributes getExtra() {
    return extra;
  }
  public void setExtra(ListingExtraAttributes extra) {
    this.extra = extra;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Dealer getDealer() {
    return dealer;
  }
  public void setDealer(Dealer dealer) {
    this.dealer = dealer;
  }

  /**
   * Car location data. Included only if its a different location to the dealers location
   **/
  @ApiModelProperty(value = "Car location data. Included only if its a different location to the dealers location")
  public Location getCarLocation() {
    return carLocation;
  }
  public void setCarLocation(Location carLocation) {
    this.carLocation = carLocation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Listing listing = (Listing) o;
    return (this.id == null ? listing.id == null : this.id.equals(listing.id)) &&
        (this.heading == null ? listing.heading == null : this.heading.equals(listing.heading)) &&
        (this.vin == null ? listing.vin == null : this.vin.equals(listing.vin)) &&
        (this.stockNo == null ? listing.stockNo == null : this.stockNo.equals(listing.stockNo)) &&
        (this.price == null ? listing.price == null : this.price.equals(listing.price)) &&
        (this.msrp == null ? listing.msrp == null : this.msrp.equals(listing.msrp)) &&
        (this.miles == null ? listing.miles == null : this.miles.equals(listing.miles)) &&
        (this.inventoryType == null ? listing.inventoryType == null : this.inventoryType.equals(listing.inventoryType)) &&
        (this.scrapedAtDate == null ? listing.scrapedAtDate == null : this.scrapedAtDate.equals(listing.scrapedAtDate)) &&
        (this.firstSeenAt == null ? listing.firstSeenAt == null : this.firstSeenAt.equals(listing.firstSeenAt)) &&
        (this.firstSeenAtDate == null ? listing.firstSeenAtDate == null : this.firstSeenAtDate.equals(listing.firstSeenAtDate)) &&
        (this.vdpUrl == null ? listing.vdpUrl == null : this.vdpUrl.equals(listing.vdpUrl)) &&
        (this.source == null ? listing.source == null : this.source.equals(listing.source)) &&
        (this.isCertified == null ? listing.isCertified == null : this.isCertified.equals(listing.isCertified)) &&
        (this.dom == null ? listing.dom == null : this.dom.equals(listing.dom)) &&
        (this.dom180 == null ? listing.dom180 == null : this.dom180.equals(listing.dom180)) &&
        (this.domActive == null ? listing.domActive == null : this.domActive.equals(listing.domActive)) &&
        (this.sellerType == null ? listing.sellerType == null : this.sellerType.equals(listing.sellerType)) &&
        (this.lastSeenAt == null ? listing.lastSeenAt == null : this.lastSeenAt.equals(listing.lastSeenAt)) &&
        (this.lastSeenAtDate == null ? listing.lastSeenAtDate == null : this.lastSeenAtDate.equals(listing.lastSeenAtDate)) &&
        (this.build == null ? listing.build == null : this.build.equals(listing.build)) &&
        (this.media == null ? listing.media == null : this.media.equals(listing.media)) &&
        (this.extra == null ? listing.extra == null : this.extra.equals(listing.extra)) &&
        (this.dealer == null ? listing.dealer == null : this.dealer.equals(listing.dealer)) &&
        (this.carLocation == null ? listing.carLocation == null : this.carLocation.equals(listing.carLocation));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.heading == null ? 0: this.heading.hashCode());
    result = 31 * result + (this.vin == null ? 0: this.vin.hashCode());
    result = 31 * result + (this.stockNo == null ? 0: this.stockNo.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.msrp == null ? 0: this.msrp.hashCode());
    result = 31 * result + (this.miles == null ? 0: this.miles.hashCode());
    result = 31 * result + (this.inventoryType == null ? 0: this.inventoryType.hashCode());
    result = 31 * result + (this.scrapedAtDate == null ? 0: this.scrapedAtDate.hashCode());
    result = 31 * result + (this.firstSeenAt == null ? 0: this.firstSeenAt.hashCode());
    result = 31 * result + (this.firstSeenAtDate == null ? 0: this.firstSeenAtDate.hashCode());
    result = 31 * result + (this.vdpUrl == null ? 0: this.vdpUrl.hashCode());
    result = 31 * result + (this.source == null ? 0: this.source.hashCode());
    result = 31 * result + (this.isCertified == null ? 0: this.isCertified.hashCode());
    result = 31 * result + (this.dom == null ? 0: this.dom.hashCode());
    result = 31 * result + (this.dom180 == null ? 0: this.dom180.hashCode());
    result = 31 * result + (this.domActive == null ? 0: this.domActive.hashCode());
    result = 31 * result + (this.sellerType == null ? 0: this.sellerType.hashCode());
    result = 31 * result + (this.lastSeenAt == null ? 0: this.lastSeenAt.hashCode());
    result = 31 * result + (this.lastSeenAtDate == null ? 0: this.lastSeenAtDate.hashCode());
    result = 31 * result + (this.build == null ? 0: this.build.hashCode());
    result = 31 * result + (this.media == null ? 0: this.media.hashCode());
    result = 31 * result + (this.extra == null ? 0: this.extra.hashCode());
    result = 31 * result + (this.dealer == null ? 0: this.dealer.hashCode());
    result = 31 * result + (this.carLocation == null ? 0: this.carLocation.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Listing {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  heading: ").append(heading).append("\n");
    sb.append("  vin: ").append(vin).append("\n");
    sb.append("  stockNo: ").append(stockNo).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  msrp: ").append(msrp).append("\n");
    sb.append("  miles: ").append(miles).append("\n");
    sb.append("  inventoryType: ").append(inventoryType).append("\n");
    sb.append("  scrapedAtDate: ").append(scrapedAtDate).append("\n");
    sb.append("  firstSeenAt: ").append(firstSeenAt).append("\n");
    sb.append("  firstSeenAtDate: ").append(firstSeenAtDate).append("\n");
    sb.append("  vdpUrl: ").append(vdpUrl).append("\n");
    sb.append("  source: ").append(source).append("\n");
    sb.append("  isCertified: ").append(isCertified).append("\n");
    sb.append("  dom: ").append(dom).append("\n");
    sb.append("  dom180: ").append(dom180).append("\n");
    sb.append("  domActive: ").append(domActive).append("\n");
    sb.append("  sellerType: ").append(sellerType).append("\n");
    sb.append("  lastSeenAt: ").append(lastSeenAt).append("\n");
    sb.append("  lastSeenAtDate: ").append(lastSeenAtDate).append("\n");
    sb.append("  build: ").append(build).append("\n");
    sb.append("  media: ").append(media).append("\n");
    sb.append("  extra: ").append(extra).append("\n");
    sb.append("  dealer: ").append(dealer).append("\n");
    sb.append("  carLocation: ").append(carLocation).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
