/**
 * Marketcheck Cars API
 * <b>Access the New, Used and Certified cars inventories for all Car Dealers in US.</b> <br/>The data is sourced from online listings by over 44,000 Car dealers in US. At any time, there are about 6.2M searchable listings (about 1.9M unique VINs) for Used & Certified cars and about 6.6M (about 3.9M unique VINs) New Car listings from all over US. We use this API at the back for our website <a href='https://www.marketcheck.com' target='_blank'>www.marketcheck.com</a> and our Android and iOS mobile apps too.<br/><h5> Few useful links : </h5><ul><li>A quick view of the API and the use cases is depicated <a href='https://portals.marketcheck.com/mcapi/' target='_blank'>here</a></li><li>The Postman collection with various usages of the API is shared here https://www.getpostman.com/collections/2752684ff636cdd7bac2</li></ul>
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ListingExtraAttributes {
  
  @SerializedName("options")
  private List<String> options = null;
  @SerializedName("features")
  private List<String> features = null;
  @SerializedName("seller_comment")
  private String sellerComment = null;

  /**
   * Installed Options of the car
   **/
  @ApiModelProperty(value = "Installed Options of the car")
  public List<String> getOptions() {
    return options;
  }
  public void setOptions(List<String> options) {
    this.options = options;
  }

  /**
   * List of Features available with the car
   **/
  @ApiModelProperty(value = "List of Features available with the car")
  public List<String> getFeatures() {
    return features;
  }
  public void setFeatures(List<String> features) {
    this.features = features;
  }

  /**
   * Seller comment for the car
   **/
  @ApiModelProperty(value = "Seller comment for the car")
  public String getSellerComment() {
    return sellerComment;
  }
  public void setSellerComment(String sellerComment) {
    this.sellerComment = sellerComment;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListingExtraAttributes listingExtraAttributes = (ListingExtraAttributes) o;
    return (this.options == null ? listingExtraAttributes.options == null : this.options.equals(listingExtraAttributes.options)) &&
        (this.features == null ? listingExtraAttributes.features == null : this.features.equals(listingExtraAttributes.features)) &&
        (this.sellerComment == null ? listingExtraAttributes.sellerComment == null : this.sellerComment.equals(listingExtraAttributes.sellerComment));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.options == null ? 0: this.options.hashCode());
    result = 31 * result + (this.features == null ? 0: this.features.hashCode());
    result = 31 * result + (this.sellerComment == null ? 0: this.sellerComment.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListingExtraAttributes {\n");
    
    sb.append("  options: ").append(options).append("\n");
    sb.append("  features: ").append(features).append("\n");
    sb.append("  sellerComment: ").append(sellerComment).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
