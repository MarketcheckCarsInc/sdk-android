/**
 * Marketcheck Cars API
 * <b>Access the New, Used and Certified cars inventories for all Car Dealers in US.</b> <br/>The data is sourced from online listings by over 44,000 Car dealers in US. At any time, there are about 6.2M searchable listings (about 1.9M unique VINs) for Used & Certified cars and about 6.6M (about 3.9M unique VINs) New Car listings from all over US. We use this API at the back for our website <a href='https://www.marketcheck.com' target='_blank'>www.marketcheck.com</a> and our Android and iOS mobile apps too.<br/><h5> Few useful links : </h5><ul><li>A quick view of the API and the use cases is depicated <a href='https://portals.marketcheck.com/mcapi/' target='_blank'>here</a></li><li>The Postman collection with various usages of the API is shared here https://www.getpostman.com/collections/2752684ff636cdd7bac2</li></ul>
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.BaseListing;
import java.math.BigDecimal;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Search query response
 **/
@ApiModel(description = "Search query response")
public class SearchResponse {
  
  @SerializedName("num_found")
  private BigDecimal numFound = null;
  @SerializedName("listings")
  private List<BaseListing> listings = null;

  /**
   * The number of listings found
   **/
  @ApiModelProperty(value = "The number of listings found")
  public BigDecimal getNumFound() {
    return numFound;
  }
  public void setNumFound(BigDecimal numFound) {
    this.numFound = numFound;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<BaseListing> getListings() {
    return listings;
  }
  public void setListings(List<BaseListing> listings) {
    this.listings = listings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchResponse searchResponse = (SearchResponse) o;
    return (this.numFound == null ? searchResponse.numFound == null : this.numFound.equals(searchResponse.numFound)) &&
        (this.listings == null ? searchResponse.listings == null : this.listings.equals(searchResponse.listings));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.numFound == null ? 0: this.numFound.hashCode());
    result = 31 * result + (this.listings == null ? 0: this.listings.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchResponse {\n");
    
    sb.append("  numFound: ").append(numFound).append("\n");
    sb.append("  listings: ").append(listings).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
