/**
 * Marketcheck Cars API
 * <b>Access the New, Used and Certified cars inventories for all Car Dealers in US.</b> <br/>The data is sourced from online listings by over 44,000 Car dealers in US. At any time, there are about 6.2M searchable listings (about 1.9M unique VINs) for Used & Certified cars and about 6.6M (about 3.9M unique VINs) New Car listings from all over US. We use this API at the back for our website <a href='https://www.marketcheck.com' target='_blank'>www.marketcheck.com</a> and our Android and iOS mobile apps too.<br/><h5> Few useful links : </h5><ul><li>A quick view of the API and the use cases is depicated <a href='https://portals.marketcheck.com/mcapi/' target='_blank'>here</a></li><li>The Postman collection with various usages of the API is shared here https://www.getpostman.com/collections/2752684ff636cdd7bac2</li></ul>
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class TrendPoint {
  
  @SerializedName("price")
  private BigDecimal price = null;
  @SerializedName("miles")
  private BigDecimal miles = null;
  @SerializedName("dom")
  private BigDecimal dom = null;
  @SerializedName("units")
  private BigDecimal units = null;
  @SerializedName("msrp")
  private BigDecimal msrp = null;

  /**
   * Price
   **/
  @ApiModelProperty(value = "Price")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  /**
   * Miles
   **/
  @ApiModelProperty(value = "Miles")
  public BigDecimal getMiles() {
    return miles;
  }
  public void setMiles(BigDecimal miles) {
    this.miles = miles;
  }

  /**
   * Days on Market
   **/
  @ApiModelProperty(value = "Days on Market")
  public BigDecimal getDom() {
    return dom;
  }
  public void setDom(BigDecimal dom) {
    this.dom = dom;
  }

  /**
   * Units
   **/
  @ApiModelProperty(value = "Units")
  public BigDecimal getUnits() {
    return units;
  }
  public void setUnits(BigDecimal units) {
    this.units = units;
  }

  /**
   * MSRP
   **/
  @ApiModelProperty(value = "MSRP")
  public BigDecimal getMsrp() {
    return msrp;
  }
  public void setMsrp(BigDecimal msrp) {
    this.msrp = msrp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrendPoint trendPoint = (TrendPoint) o;
    return (this.price == null ? trendPoint.price == null : this.price.equals(trendPoint.price)) &&
        (this.miles == null ? trendPoint.miles == null : this.miles.equals(trendPoint.miles)) &&
        (this.dom == null ? trendPoint.dom == null : this.dom.equals(trendPoint.dom)) &&
        (this.units == null ? trendPoint.units == null : this.units.equals(trendPoint.units)) &&
        (this.msrp == null ? trendPoint.msrp == null : this.msrp.equals(trendPoint.msrp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.miles == null ? 0: this.miles.hashCode());
    result = 31 * result + (this.dom == null ? 0: this.dom.hashCode());
    result = 31 * result + (this.units == null ? 0: this.units.hashCode());
    result = 31 * result + (this.msrp == null ? 0: this.msrp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrendPoint {\n");
    
    sb.append("  price: ").append(price).append("\n");
    sb.append("  miles: ").append(miles).append("\n");
    sb.append("  dom: ").append(dom).append("\n");
    sb.append("  units: ").append(units).append("\n");
    sb.append("  msrp: ").append(msrp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
